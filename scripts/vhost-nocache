server {
  listen 80;
  # listen [::]:80;
  listen 443 ssl;
  # listen [::]:443 ssl;
  ssl_certificate /etc/ssl/domain.com/domain.com.crt;
  ssl_certificate_key /etc/ssl/domain.com/domain.com.key;
  # as of NGINX version 1.25.1, you should use the http2 on; directive inside the server block
  http2 on;
  root /var/www/domain.com;
  index index.php index.html index.htm;
  error_log /var/log/nginx/domain.com.error.log;
  server_name domain.com www.domain.com;

  # Serve ACME challenge files for Let's Encrypt over both HTTP and HTTPS.
  # Without this location block the HTTP-01 challenge may be redirected or
  # handled by your application, causing certificate issuance to fail. The
  # alias points to a shared directory used by Certbot when using the webroot
  # method.  See https://letsencrypt.org/docs/challenge-types/#http-01-challenge
  # for details.
  location ^~ /.well-known/acme-challenge/ {
      alias /var/www/_letsencrypt/.well-known/acme-challenge/;
      default_type "text/plain";
      try_files $uri =404;
      access_log off;
      add_header Cache-Control "no-cache";
  }

   location / {
       try_files $uri $uri/ /index.php?$args;
   }

  if ($http_user_agent ~* (MJ12bot|SemrushBot|AhrefsBot|DotBot) ) { return 301 http://127.0.0.1/; }
  location ~*
  /(?:uploads|files)/.*\.(asp|bat|cgi|htm|html|ico|js|jsp|md|php|pl|py|sh|shtml|swf|twig|txt|yaml|yml|zip|gz|tar|bzip2|7z)$ { deny all; }

   location ~ \.php$ {
       fastcgi_split_path_info ^(.+\.php)(/.+)$;
       fastcgi_pass unix:/var/run/php/phpX.X-domain.com-fpm.sock;
       fastcgi_index index.php;
       fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
       include fastcgi_params;
   }
 
   location = /favicon.ico {
       log_not_found off;
       access_log off;
   }
 
   location = /robots.txt {
           try_files $uri $uri/ /index.php?$args;
       allow all;
       log_not_found off;
       access_log off;
   }
 
   location ~* \.(jpg|jpeg|png|gif|ico|css|js|eot|ttf|otf|woff|svg)$ {
       expires 365d;
   }
 
   location ~ /\.ht {
       deny all;
   }

   location ~ /\.us {
      deny all;
   }

  location = /xmlrpc.php {
    return 403;
   }
 
   rewrite ^/sitemap_index\.xml$ /index.php?sitemap=1 last;
   rewrite ^/([^/]+?)-sitemap([0-9]+)?\.xml$ /index.php?sitemap=$1&sitemap_n=$2 last;

}